package exploiter.controller;

import AgameMain.Main;
import exploiter.Exploiter;
import exploiter.service.DeleteService;
import exploiter.service.ResearchByIdService;

//삭제컨트롤러
public class DeleteController implements Controller {

	private static DeleteController instance;

	public static DeleteController getInstance() {

		if (instance == null) {
			instance = new DeleteController();
		}

		return instance;
	}

	DeleteService service = DeleteService.getInstance();
	ResearchByIdService byService = ResearchByIdService.getInstance();

	public void process() {

		String id = Main.user.getId(); // 기본 삭제 대상 id를 로그인 된 정보가 담겨있는 user의 id로 받아오고
		if (Main.user.getAdmin() == 1) { // 관리자일 시 삭제 대상 id를 입력받는 분기. 자기 자신도 입력 가능

			System.out.println("탈퇴시킬 id를 입력해주세요.");
			id = Main.sc.nextLine();
		}

		System.out.println("정말 탈퇴하시겠습니까? y/n");
		String temp = Main.sc.nextLine();

		int result = 0;

		if (temp.equals("y")) { // temp.equas("n") 일 시 return 처리하고 삭제 진행 시 y가 아닌 다른걸 실수로 입력해도 삭제가 되므로 equals y

			Exploiter exploiter = byService.researchById(id);
			if(exploiter == null) {
				System.out.println("해당 유저의 정보를 찾을 수 없습니다.");
				return;
			}
			// rank table이 exploiter table 값을 참조하기에
			// 삭제하는 유저를 참조한 데이터가 rank table에 있으면 오류가 발생하는 문제가 생김
			// 랭크 데이터까지 삭제하려면 유저번호를 매개변수로 받아야하기에 exploiter로 전체 정보 받음
			// >> researchByIdService의 의존도가 너무 늘어나버림. 
			// exploiterImpl클래스 delete()메소드의 쿼리문을 수정해서 researcByIdService를 호출하지 않게 구성할 수 있었으나
			// sql상에서 쿼리문 입력 시 정상처리되나 이클립스에서 쿼리문을 보냈을땐 오류가 발생.
			// 시간상의 문제로 researchByIdService로 exploiter 전체 정보를 받아오는 방식을 채택 << 아쉬운점
			
			if (id.equals(Main.user.getId())) { // 삭제 대상 id가 현재 로그인 된 계정이라면 로그인 정보 삭제 처리
				Main.user = null;
			}

			result = service.delete(exploiter); // 삭제 대상 id를 매개변수로 service 단의 delete 실행, 결과를 result에 넘겨받음
		}

		if (result > 0) { // result가 1 이상일 시 정상처리
			System.out.println("삭제되었습니다.");

		} else {
			System.out.println("삭제 실패");

		}

	}

}
