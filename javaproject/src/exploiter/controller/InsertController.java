package exploiter.controller;

import java.util.regex.Pattern;

import AgameMain.Main;
import exploiter.Exploiter;
import exploiter.service.InsertService;
import exploiter.service.ResearchByIdService;
import generic.Encrypt;

public class InsertController implements Controller {

	private static InsertController instance;

	public static InsertController getInstance() {

		if (instance == null) {
			instance = new InsertController();
		}

		return instance;
	}

	InsertService service = InsertService.getInstance();
	ResearchByIdService byIdService = ResearchByIdService.getInstance();

	public void process() {
		String id = null;
		int admin = 0;
		String password = null;
		String nickname = null;

		System.out.println("회원가입을 시작합니다. ");

		System.out.println("↓↓회원가입↓↓");
		System.out.print("아이디를 입력하세요. ->");
		id = checkId(id);
		System.out.print("비밀번호를 입력하세요. ->");
		password = checkPassword(password);
		System.out.print("닉네임을 이용하세요. ->");
		nickname = checkNickname(nickname);
		System.out.print("일반 회원인 경우 '회원'을, 관리자인 경우 '관리자'를 입력하세요. ->");
		admin = checkAdmin(admin);
		
		String salt = Encrypt.getSalt();
		password = Encrypt.getEncrypt(password, salt);

		// 회원가입 여부 확인
		int result = service.insert(new Exploiter(id, password, nickname, admin, salt));

		if (result > 0) {
			System.out.println("회원가입이 완료되었습니다.\n");
		} else {
			System.out.println("회원가입에 실패하였습니다. 메인 화면으로 돌아갑니다.\n");
		}
	}

	// 아이디 중복, 공백 체크
	public String checkId(String id) {

		while (true) {
			id = Main.sc.nextLine();

			try {
				if (byIdService.researchById(id) != null) {
					throw new Exception();
				} else if (id.isEmpty()) {
					throw new Exception();
				} else {
					return id;
				}

			} catch (Exception e) {
				System.out.println("공백이거나 중복된 아이디 입니다. 아이디를 다시 입력하세요. ->");
				continue;
			}
		}
	}

	// 비밀번호 공백, 5글자 이상 입력 체크
	public String checkPassword(String password) {

		while (true) {
			password = Main.sc.nextLine();

			try {
				if (password.isEmpty()) {
					throw new Exception();
				} else if (password.length() < 5) {
					throw new Exception();
				} else {
					return password;
				}

			} catch (Exception e) {
				System.out.println("비밀번호는 5글자 이상이여야 합니다. 비밀번호를 다시 입력하세요. ->");
				continue;
			}
		}
	}

	// 닉네임 공백체크, 패턴(특수문자)체크
	public String checkNickname(String nickname) {

		while (true) {
			nickname = Main.sc.nextLine();
			boolean check = Pattern.matches("^[a-z0-9A-Z가-힣]*$", nickname);

			try {
				if (nickname.isEmpty()) {
					throw new Exception();
				} else if (!check) {
					throw new Exception();
				} else {
					return nickname;
				}

			} catch (Exception e) {
				System.out.println("공백과 특수문자는 허용하지 않습니다. 닉네임을 다시 입력하세요. ->");
				continue;
			}
		}
	}

	// 관리자 여부(0-회원,1-관리자) 체크 -- 수정중
	public int checkAdmin(int admin) {
		
		while(true) {
			
			String str = Main.sc.nextLine();
			
			try {
				
				if(str.equals("회원")) {
					admin = 0;
					System.out.println("일반 회원 입니다. ");
					return admin;
					
				} else if(str.equals("관리자")) {
					admin = 1;
					System.out.println("관리자 입니다. ");
					return admin;
					
				} else {
					throw new Exception();
				}
				
			} catch (Exception e) {
				System.out.println("관리자 혹은 회원만 입력가능합니다. 다시 입력하세요. -> ");
				continue;
				
			}
			
		}

	}

	
}
