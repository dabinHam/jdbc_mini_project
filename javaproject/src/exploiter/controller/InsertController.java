package exploiter.controller;


import java.util.regex.Pattern;

import AgameMain.Main;
import exploiter.Exploiter;
import exploiter.service.InsertService;
import exploiter.service.ResearchByIdService;

public class InsertController implements Controller {
	
	InsertService service = new InsertService();
	ResearchByIdService byIdService = new ResearchByIdService();

	public void process() {
		String id = null;
		int admin=0;
		String password=null;
		String nickname=null;

		System.out.println("회원가입을 시작합니다. ");

		System.out.println("↓↓회원가입↓↓");
		System.out.print("아이디를 입력하세요. ->");
		id = checkId(id);
		System.out.print("비밀번호를 입력하세요. ->");
		password = checkPassword(password);
		System.out.print("닉네임을 이용하세요. ->");
		nickname = checkNickname(nickname);
		System.out.print("일반 회원인 경우 숫자 0을, 관리자인 경우 숫자 1을 입력하세요. ->");
		admin = checkAdmin(admin);

		// 회원가입 여부 확인
		int result = service.insert(new Exploiter(id, password, nickname, admin));

		if (result > 0) {
			System.out.println("회원가입이 완료되었습니다.");
		} else {
			System.out.println("회원가입에 실패하였습니다. 메인 화면으로 돌아갑니다. ");
		}
	}

	// 아이디 중복체크
//	private String checkId(String id) {
//		while (true) {
//			id = Main.sc.nextLine();
//			if ((byIdService.researchById(id) == null)) {
//				return id;
//			}
//			System.out.println("중복된 아이디 입니다. 다시 입력하세요. ->");
//		}
//	}
	
	// 아이디 중복, 공백 체크
	private String checkId(String id) {
		
		while(true) {
			id = Main.sc.nextLine();
			
			try {
				if(byIdService.researchById(id) != null) {
					throw new Exception();
				} else if(id.isEmpty()) {
					throw new Exception();
				} else {
					return id;
				}
				
			} catch(Exception e) {
				System.out.println("공백이거나 중복된 아이디 입니다. 다시 입력하세요. ->");
				continue;
			}
		}
	}

	// 비밀번호 공백, 5글자 이상 입력 체크
	private String checkPassword(String password) {
		
		while(true) {
			password = Main.sc.nextLine();
			
			try {
				if(password.isEmpty()) {
					throw new Exception();
				} else if(password.length()<5){
					throw new Exception();
				} else {
					return password;
				}
				
			} catch(Exception e) {
				System.out.println("비밀번호는 5글자 이상이여야 합니다. 다시 입력하세요. ->");
				continue;
			}
		}
	}
	
	// 닉네임 공백체크, 패턴(특수문자)체크
	private String checkNickname(String nickname) {

		
		while(true) {
			nickname = Main.sc.nextLine();
			boolean check = Pattern.matches("^[a-z0-9A-Z가-힣]*$", nickname);
			
			try {
				if(nickname.isEmpty()) {
					throw new Exception();
				} else if(!check){
					throw new Exception();
				} else {
					return nickname;
				}
				
			} catch(Exception e) {
				System.out.println("공백과 특수문자는 허용하지 않습니다. 다시 입력하세요. ->");
				continue;
			}
		}
	}
		
	// 관리자 여부(0,1) 체크 -- 수정중
	private int checkAdmin(int admin) {
		
		while(true) {
			admin = Main.sc.nextInt();
			
			try {
				if(!(admin==0 || admin==1)) {
					throw new Exception();
				} else {
					return admin;
				}
				
			} catch(Exception e) {
				System.out.println("0 혹은 1을 입력하세요. ->");
				continue;
			}
		}
	}
	
	
	
	
	
	
	
}
