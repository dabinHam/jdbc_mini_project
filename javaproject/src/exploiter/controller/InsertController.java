package exploiter.controller;

import AgameMain.Main;
import exploiter.Exploiter;
import exploiter.service.InsertService;
import exploiter.service.ResearchByIdService;

public class InsertController implements Controller {
	InsertService service = new InsertService();
	ResearchByIdService byIdService = new ResearchByIdService();

	public void process() {
		String id = null;
		System.out.println("↓↓회원가입↓↓");
		System.out.print("아이디 ->");
		id = check_Id(id);	// 아이디 중복체크 메소드 호출
		System.out.print("비밀번호 ->");
		String password = Main.sc.nextLine();
		System.out.print("닉네임 ->");
		String nickname = Main.sc.nextLine();
		System.out.print("관리자?");
		int admin = Integer.parseInt(Main.sc.nextLine());

		// exploiternumber 컬럼은 db에서 index로 자동 생성할 것이기 때문에 제외하고 생성, dml은 성공시 int로 결과 반환
		int result = service.insert(new Exploiter(id, password, nickname, admin));

		if (result > 0) {
			System.out.println("입력되었습니다.");	// 회원가입 잘 처리되었는지 직관적으로 확인하기 위해 Main.user에는 값을 바로 주지 않고 다시 로그인하도록 구성
		} else {
			System.out.println("입력 실패");
		}
	}

	// id 중복체크 메소드
	private String check_Id(String id) {
		while (true) {
			id = Main.sc.nextLine();
			if ((byIdService.researchById(id) == null)) {
				return id;
			}
			System.out.println("아이디가 중복되었습니다. 다시 입력해주세요");
		}

	}

}
