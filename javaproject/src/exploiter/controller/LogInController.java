package exploiter.controller;

import AgameMain.Main;
import exploiter.Exploiter;
import exploiter.service.ResearchByIdService;
import generic.Encrypt;

public class LogInController implements Controller {

	private static LogInController instance;

	public static LogInController getInstance() {

		if (instance == null) {
			instance = new LogInController();
		}

		return instance;
	}

	ResearchByIdService service = ResearchByIdService.getInstance();

	public void process() {
		System.out.println("↓↓로그인↓↓");
		System.out.print("id : ");
		String id = Main.sc.nextLine();

		System.out.print("pw : ");
		String password = Main.sc.nextLine();

		Exploiter exploiter = service.researchById(id); // 로그인 시도하는 id로 정보 받아와서 exploiter에 저장

		// 입력한 pw + db에서 로그인 시도한 id로 가져온 exploiter의 salt 값으로 암호화한 값이
		// exploiter의 pw와 일치하면 static으로 선언해둔 Main의 user에 해당 계정 정보 저장
		// 관리자 여부를 판단해서 로그인 메세지 분기
		
		if (exploiter != null && exploiter.getPassword().equals(Encrypt.getEncrypt(password, exploiter.getSalt())) && exploiter.getAdmin() == 0) {

			Main.user = exploiter;
			System.out.printf("%s 님이 로그인 하였습니다.", Main.user.getNickname());

		} else if (exploiter != null && exploiter.getPassword().equals(Encrypt.getEncrypt(password, exploiter.getSalt())) && exploiter.getAdmin() == 1) {

			Main.user = exploiter;
			System.out.printf("관리자 %s 님이 로그인 하였습니다.", Main.user.getNickname());

		}

		else {
			System.out.println("로그인 실패");
		}

	}
}